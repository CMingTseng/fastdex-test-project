import com.android.build.api.transform.Transform
import com.android.build.gradle.internal.dependency.VariantDependencies
import com.android.build.gradle.internal.pipeline.TransformTask

import java.lang.reflect.Field

apply plugin: 'com.android.library'

android {
    compileSdkVersion 26
    buildToolsVersion '26.0.2'


    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

//    productFlavors {
//        dev {
//
//        }
//    }
}

dependencies {
    debugCompile project(':mylibrary2')
}


task mylibrarytest << {

}

project.afterEvaluate {
    android.libraryVariants.all { variant ->
        def variantName = variant.name.capitalize()
        def variantOutput = variant.outputs.first()

        if ("Debug".equals(variantName)) {
            VariantDependencies variantDeps = variant.getVariantData().getVariantDependency();

            for (Dependency dependency : variantDeps.getCompileClasspath().getAllDependencies()) {
                if (dependency instanceof org.gradle.api.internal.artifacts.dependencies.DefaultProjectDependency) {
                    println "dependency: " + dependency
                }
            }

            def variantScope = variant.variantData.getScope();

            println "=============variant.getVariantData(): " + variantOutput.getOutputFile()

            println "=============getIntermediateJarOutputFolder: " + new File(variantScope.getIntermediateJarOutputFolder(),com.android.SdkConstants.FN_CLASSES_JAR)
        }
    }
}
