import com.android.build.api.transform.Transform
import com.android.build.gradle.api.BaseVariant
import com.android.build.gradle.internal.dependency.VariantDependencies
import com.android.build.gradle.internal.pipeline.TransformTask

import java.lang.reflect.Field

apply plugin: 'com.android.library'

android {
    compileSdkVersion 26
    buildToolsVersion '26.0.2'


    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        product {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    productFlavors {
        dev {
            flavorDimensions "versionCode"
        }

//        dev2 {
//            flavorDimensions "versionCode"
//        }
    }
}

dependencies {
    compile project(':mylibrary2')

    implementation 'com.squareup:otto:1.3.5'
}


task mylibrarytest  {
    doLast {

    }
}

project.afterEvaluate {

    def vt = android.libraryVariants.find { it.getBuildType().buildType.getName().equals("release") }

    println vt
    android.libraryVariants.all { variant ->
        def variantName = variant.name.capitalize()
        def variantOutput = variant.outputs.first()

        println "mylibrary.buildTypeName: " + variant.getBuildType().buildType.getName()
        println "mylibrary.variantName: " + variantName

//        if ("Debug".equals(variantName)) {
//            VariantDependencies variantDeps = variant.getVariantData().getVariantDependency();
//
//            for (Dependency dependency : variantDeps.getCompileClasspath().getAllDependencies()) {
//                if (dependency instanceof org.gradle.api.internal.artifacts.dependencies.DefaultProjectDependency) {
//                    println "dependency: " + dependency
//                }
//            }
//
//            def variantScope = variant.variantData.getScope();
//            String buildTypeName = variant.getBuildType().buildType.getName()
//            println "=============getIntermediateJarOutputFolder: " + new File(variantScope.getIntermediateJarOutputFolder(),com.android.SdkConstants.FN_CLASSES_JAR)
//
//            final String compileClasspathName = buildTypeName + "CompileClasspath";
//            final ConfigurationContainer configurations = project.getConfigurations();
//            Configuration compileClasspath = configurations.maybeCreate(compileClasspathName);
//
//            for (Dependency dependency : compileClasspath.getAllDependencies()) {
//                if (dependency instanceof org.gradle.api.internal.artifacts.dependencies.DefaultProjectDependency) {
//                    println "===dependency: " + dependency + " compileClasspathName: " + compileClasspathName
//                }
//            }
//        }
    }
}
