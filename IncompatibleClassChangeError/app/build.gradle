apply plugin: 'com.android.application'
//apply plugin: 'fastdex.app'

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.1"
    defaultConfig {
        applicationId "com.example.exception"
        minSdkVersion 15
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:26.+'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    testCompile 'junit:junit:4.12'
}

public static void copyFileUsingStream(File src, File dest) throws IOException {
    FileOutputStream os = null;
    InputStream is = null;
    File parent = dest.getParentFile();
    if (parent != null && (!parent.exists())) {
        parent.mkdirs();
    }
    try {
        is = new FileInputStream(src);
        os = new FileOutputStream(dest, false);

        byte[] buffer = new byte[1024];
        int length;
        while ((length = is.read(buffer)) > 0) {
            os.write(buffer, 0, length);
        }
    } finally {
        if (is != null) {
            is.close();
        }
        if (os != null) {
            os.close();
        }
    }
}

project.afterEvaluate {
    tasks['packageDebug'].doFirst {
        //classesN
        copyFileUsingStream(project.rootProject.file('dex/patch.dex'),project.file('build/intermediates/transforms/dex/debug/folders/1000/1f/main/classes2.dex'))
        copyFileUsingStream(project.rootProject.file('dex/classes.dex'),project.file('build/intermediates/transforms/dex/debug/folders/1000/1f/main/classes3.dex'))

//        copyFileUsingStream(project.rootProject.file('dex/patch.dex'),project.file('src/main/assets/patch.dex'))
//        copyFileUsingStream(project.rootProject.file('dex/classes.dex'),project.file('src/main/assets/classes.dex'))
    }
}

